(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{370:function(s,t,e){"use strict";e.r(t);var n=e(44),a=Object(n.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[s._v("#")]),s._v(" Docker")]),s._v(" "),e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),e("ul",[e("li",[s._v("删除旧版本")])]),s._v(" "),e("blockquote",[e("p",[s._v("yum remove docker \\"),e("br"),s._v("\ndocker-client \\"),e("br"),s._v("\ndocker-client-latest \\"),e("br"),s._v("\ndocker-common \\\ndocker-latest \\"),e("br"),s._v("\ndocker-latest-logrotate \\"),e("br"),s._v("\ndocker-logrotate \\"),e("br"),s._v("\ndocker-engine")])]),s._v(" "),e("ul",[e("li",[s._v("安装环境包")])]),s._v(" "),e("blockquote",[e("p",[s._v("yum install -y yum-utils")])]),s._v(" "),e("ul",[e("li",[s._v("设置安装镜像地址")])]),s._v(" "),e("blockquote",[e("p",[s._v("yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo")])]),s._v(" "),e("ul",[e("li",[s._v("更新yum软件包索引")])]),s._v(" "),e("blockquote",[e("p",[s._v("yum makecache fast")])]),s._v(" "),e("ul",[e("li",[s._v("安装docker ce社区")])]),s._v(" "),e("blockquote",[e("p",[s._v("yum install docker-ce docker-ce-cli containerd.io")])]),s._v(" "),e("ul",[e("li",[s._v("启动docker")])]),s._v(" "),e("blockquote",[e("p",[s._v("systemctl start docker")])]),s._v(" "),e("ul",[e("li",[s._v("运行helloworld")])]),s._v(" "),e("blockquote",[e("p",[s._v("docker run hello")])]),s._v(" "),e("ul",[e("li",[s._v("如果出错通过专属阿里加速修改配置")])]),s._v(" "),e("blockquote",[e("p",[s._v('tee /etc/docker/daemon.json <<-\'EOF\' { "registry-mirrors": ["https://zv20bl4b.mirror.aliyuncs.com"] } EOF sudo systemctl daemon-reload sudo systemctl restart docker'),e("strong",[s._v("​")])])]),s._v(" "),e("ul",[e("li",[s._v("查看镜像")])]),s._v(" "),e("blockquote",[e("p",[s._v("docker images")])]),s._v(" "),e("ul",[e("li",[s._v("卸载 Docker Engine、CLI 和 Containerd 包")])]),s._v(" "),e("blockquote",[e("p",[s._v("yum remove docker-ce docker-ce-cli containerd.io")])]),s._v(" "),e("ul",[e("li",[s._v("删除所有镜像容器和卷")])]),s._v(" "),e("blockquote",[e("p",[s._v("rm -rf /var/lib/docker"),e("br"),s._v("\nrm -rf /var/lib/containerd")])]),s._v(" "),e("h3",{attrs:{id:"可视化界面安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可视化界面安装"}},[s._v("#")]),s._v(" 可视化界面安装")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("docker pull portainer/portainer 拉取镜像\ndocker run -d -p 9000:9000 --restart=always -v /var/run/docker.sock:/var/run/docker.sock --name prtainer-test portainer/portainer 启动容器\n")])])]),e("h2",{attrs:{id:"基本命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本命令"}},[s._v("#")]),s._v(" 基本命令")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#帮助命令")]),s._v("\ndocker version 查看版本信息\ndocker -v\ndocker info 查看docker信息\ndocker 命令 --help  查看帮助\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#镜像命令")]),s._v("\ndocker images 查看所有的镜像不包含中间映像层\ndocker images -a 包含中间映像层\ndocker images -q 只查看镜像id\ndocker search 搜索镜像\ndocker search mysql -f"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("stars"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v(" 过滤收藏大于3000\ndocker pull mysql 下载镜像默认最新版\ndocker pull mysql:5.7 指定版本标签下载\ndocker rmi -f id/name id/name 删除指定的镜像通过镜像id或者仓库名\ndocker rmi -f "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker images -aq"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" 递归删除所有的镜像\ndocker image prune 删除虚名悬空镜像\ndocker commit -a"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"提交者"')]),s._v(" -m"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"备注"')]),s._v(" 容器id 容器名  提交一个新的镜像保存配置\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#容器命令 （有了镜像才有容器）")]),s._v("\ndocker pull centos 拉取centos\ndocker run  通过镜像生成容器并且启动\ndocker run  -d --name nginx-test -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("9999")]),s._v(":80 nginx 启动 ngnix指定外部9999与容器内部80端口映射\ndocker run --name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),s._v(" 运行容器 指定名称\ndocker run -d 后台方式运行\ndocker run -it 使用交互方式运行\ndocker run -p 指定容器的端口\ndocker run -P 随机端口\ndocker run -it centos bin/bash  进入linux centos基础版本 exit退出 ctrl+p+q不停止退出\ndocker "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" 查看运行中容器\ndocker "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" 指定容器id删除\ndocker "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -aq"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" 删除全部容器\ndocker start 容器id 启动容器（之前生成过的容器）\ndocker restart 容器id 重启容器\ndocker stop 容器id 停止当前容器\ndocker "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" 容器id 强制杀掉容器\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#常用其他命令")]),s._v("\ndocker run -d 镜像名 docker使用后台运行必须要有前台进程\ndocker run --rm 镜像名 docker 退出容器会删除用户记录\ndocker logs  -t -f --tail 日志数量 容器    常看日志\ndocker logs "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" error 容器 过滤error的日志\ndocker　"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v(" 容器 查看容器进程\ndocker inspect 容器 查看容器元数据\ndocker inspect 容器"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("前三位id即可"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" Log 查看容器日志位置\n/etc/docker/daemon.json  配置日志大小上限\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"log-opts"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"max-size"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1m"')]),s._v(",\n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"max-file"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nsystemctl daemon-reload 重载配置\nsystemctl restart docker.service 重启docker\n\n\ndocker "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it 容器id /bin/bash 进入容器 开启新的终端\ndocker attach 容器id  进入容器 原有的终端\n\ndocker "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" 容器id:容器内路径 目标路径   把容器内容拷贝到主机中\n\n")])])]),e("h2",{attrs:{id:"容器数据卷"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器数据卷"}},[s._v("#")]),s._v(" 容器数据卷")]),s._v(" "),e("p",[e("br"),s._v("保证容器数据持久化不存在容器中"),e("br"),s._v("容器数据共享功能"),e("br"),s._v("卷技术 目录挂载"),e("br"),s._v("使用数据卷")]),s._v(" "),e("blockquote",[e("p",[s._v("使用命令挂载 -v   容器改动会同步到主机目录")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("docker run -it -v 主机目录 容器目录  挂载\ndocker inspect 容器id  查看mounts    source是主机目录\n")])])]),e("blockquote",[e("p",[s._v("dockerfile")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" dockerfiletest 修改\n\nFROM centos \nVOLUME "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"volum01"')]),s._v(","),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"volume02"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  挂载容器目录\nCMD "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"---end---"')]),s._v("\nCMD /bin/bash\n\n\ndocker build -f /home/dockerfiletest -t  jin/centos "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" -f路径 -t名称 构建镜像\n\n\ndocker run -it --name docker01 --volumes-from  docker00 jin/centos:1.0\n")])])]),e("p",[s._v("dockerfile解读")]),s._v(" "),e("ol",[e("li",[s._v("每个关键字都是大写的")]),s._v(" "),e("li",[s._v("执行从上到顺序执行")]),s._v(" "),e("li",[s._v("每个指定都会创建提交一个新的镜像层")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("DokcerFile 指令\nFROM  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#基础镜像 ")]),s._v("\nMAINTAINER "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#镜像是谁写的 姓名+邮箱")]),s._v("\nRUN  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#镜像构建所需执行的命令")]),s._v("\nADD  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#添加内容 自动解压")]),s._v("\nWORKDIR "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#镜像工作目录")]),s._v("\nVOLUME  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#挂载的目录")]),s._v("\nEXPOSE "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#保留端口配置")]),s._v("\nCMD "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#指定容器启动要运行的命令 只有最后一个会生效")]),s._v("\nENTRYPOINT "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#指定容器启动要运行的命令 可以追加命令")]),s._v("\nONBUILD "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#构建一个被继承DockerFile执行 触发命令")]),s._v("\nCOPY "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#复制 将文件拷贝到镜像中")]),s._v("\nENV "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置环境变量")]),s._v("\n")])])]),e("p",[s._v("创建自己的centos 配置如下")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("FROM centos\n\nMAINTAINER jin"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1491691423")]),s._v("@qq.com"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nENV MYPATH /usr/local  \nWORKDIR "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$MYPATH")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#工作目录")]),s._v("\n\n\nRUN yum -y "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v("\nRUN yum -y "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" net-tools\n\nEXPOSE "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\nCMD "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$MYPATH")]),s._v("\nCMD /bin/bash\n\n\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);